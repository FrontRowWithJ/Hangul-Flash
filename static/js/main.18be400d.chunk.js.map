{"version":3,"sources":["data.js","Card.jsx","App.js","reportWebVitals.js","index.js"],"names":["data","symbol","sound","fisherYates","arr","i","length","j","Math","random","Card","useState","isFront","flip","len","index","setIndex","Array","keys","order","setOrder","hangulNo","setNo","curr","useHangulNo","hanguls","setHangulNo","hangul","ref","useRef","changeLetter","useCallback","current","style","color","useEffect","onkeypress","key","elem","ontransitioncancel","document","body","addEventListener","removeEventListener","className","onClick","target","classList","contains","transform","onTransitionEnd","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.18be400d.chunk.js","sourcesContent":["const data = [\n  { symbol: \"아\", sound: \"a (aa)\" },\n  { symbol: \"어\", sound: \"eo (aww)\" },\n  { symbol: \"오\", sound: \"o (oh)\" },\n  { symbol: \"우\", sound: \"u (oo)\" },\n  { symbol: \"으\", sound: \"eu (uh)\" },\n  { symbol: \"이\", sound: \"i (ee)\" },\n  { symbol: \"애\", sound: \"ae (eh)\" },\n  { symbol: \"에\", sound: \"e (eh)\" },\n  { symbol: \"외\", sound: \"oe (weh)\" },\n  { symbol: \"위\", sound: \"wi (wee)\" },\n  { symbol: \"ᄀ\", sound: \"g,k\" },\n  { symbol: \"ᄂ\", sound: \"n\" },\n  { symbol: \"ᄃ\", sound: \"d/t\" },\n  { symbol: \"ᄅ\", sound: \"r,l\" },\n  { symbol: \"ᄆ\", sound: \"m\" },\n  { symbol: \"ᄇ\", sound: \"b/p\" },\n  { symbol: \"ᄉ\", sound: \"s,sh\" },\n  { symbol: \"ᄌ\", sound: \"j,ch\" },\n  { symbol: \"ᄎ\", sound: \"ch\" },\n  { symbol: \"ᄏ\", sound: \"k\" },\n  { symbol: \"ᄐ\", sound: \"t\" },\n  { symbol: \"ᄑ\", sound: \"p\" },\n  { symbol: \"ᄒ\", sound: \"h\" },\n  { symbol: \"ᄁ\", sound: \"kk\" },\n  { symbol: \"ᄄ\", sound: \"tt\" },\n  { symbol: \"ᄈ\", sound: \"pp\" },\n  { symbol: \"ᄊ\", sound: \"ss\" },\n  { symbol: \"ᄍ\", sound: \"jj\" },\n  { symbol: \"야\", sound: \"ya\" },\n  { symbol: \"여\", sound: \"yeo\" },\n  { symbol: \"요\", sound: \"yo\" },\n  { symbol: \"유\", sound: \"yu\" },\n  { symbol: \"얘\", sound: \"yae\" },\n  { symbol: \"예\", sound: \"ye\" },\n  { symbol: \"와\", sound: \"wa\" },\n  { symbol: \"왜\", sound: \"wae (wey)\" },\n  { symbol: \"워\", sound: \"weo\" },\n  { symbol: \"웨\", sound: \"we (weh)\" },\n  { symbol: \"의\", sound: \"ui (wee)\" },\n];\n\nexport default data;\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport \"./card.css\";\nimport hanguls from \"./data\";\n\nconst fisherYates = ([...arr]) => {\n  for (let i = arr.length - 1; i >= 0; i--) {\n    const j = (Math.random() * i) | 0;\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n  return arr;\n};\n\nconst useHangulNo = (len) => {\n  const [index, setIndex] = useState(0);\n  const [order, setOrder] = useState(fisherYates([...Array(len).keys()]));\n  const [hangulNo, setNo] = useState(order[index]);\n  const setHangul = () => {\n    if (index === len) {\n      setOrder(fisherYates);\n      setIndex(0);\n    }\n    setNo(order[index]);\n    setIndex((curr) => curr + 1);\n  };\n  return [hangulNo, setHangul];\n};\n\nconst Card = () => {\n  const [isFront, flip] = useState(true);\n  const [hangulNo, setHangulNo] = useHangulNo(hanguls.length);\n  const hangul = hanguls[hangulNo];\n  const ref = useRef(null);\n\n  const changeLetter = useCallback(() => {\n    setHangulNo();\n    flip(true);\n    ref.current.style.color = !isFront ? \"white\" : \"\";\n  }, [setHangulNo, isFront]);\n\n  useEffect(() => {\n    const onkeypress = ({ key }) => (key === \" \" ? changeLetter() : 0);\n    const elem = ref.current;\n    const ontransitioncancel = () => (elem.style.color = \"\");\n    document.body.addEventListener(\"keypress\", onkeypress);\n    elem.addEventListener(\"transitioncancel\", ontransitioncancel);\n    return () => {\n      document.body.removeEventListener(\"keypress\", onkeypress);\n      elem.removeEventListener(\"transitioncancel\", ontransitioncancel);\n    };\n  }, [changeLetter]);\n\n  return (\n    <div\n      className=\"card\"\n      onClick={({ target }) => {\n        if (!target.classList.contains(\"button\")) changeLetter();\n        else flip(!isFront);\n      }}\n    >\n      <span className=\"center card-symbol\">{hangul.symbol}</span>\n      <div className=\"card-sound\">\n        <div\n          ref={ref}\n          className=\"card-sound-inner\"\n          style={{ transform: `rotateX(${isFront ? 0 : 180}deg)` }}\n          onTransitionEnd={() => (ref.current.style.color = \"\")}\n        >\n          <div className=\"center button\">Reveal</div>\n          <div className=\"center button\">{hangul.sound}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport \"./App.css\";\nimport Card from \"./Card\";\n\nconst App = () => <Card />;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}